<configuration>

<!--
    This block of xml code will define how logs are displayed on the stdout:
    - ch.qos.logback.core.ConsoleAppender = class that makes this configuration
    - %d{HH:mm:ss.SSS} = Define timestamp format
    - {%thread} = Display in which thread the log was created
    - %-5level = Define the level of the log (ex: info)
    - %logger{X} = Define, through 'X', the length of the class path that will be shown. Ex:
        %logger{36} -> br.com.example.Application
        %logger{0} -> Application
    - %M = Define that, not only the class name, but also the method name will be displayed
    - %rEx{short} = Define that any thrown exception will be displayed in just one line (much cleaner)
-->

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
<!--        <pattern>%d{HH:mm:ss.SSS} {%thread} %-5level %logger{36} - %msg%n</pattern>-->
            <pattern>%d{HH:mm:ss.SSS} {%thread} %-5level %logger{36} %M - %msg %rEx{short} %n</pattern>
        </encoder>
    </appender>

    <!-- Used to display logs in json format-->
    <contextName>prod</contextName>
    <appender name="json-stdout" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.contrib.json.classic.JsonLayout">
            <jsonFormatter class="ch.qos.logback.contrib.jackson.JacksonJsonFormatter">
                <prettyPrint>true</prettyPrint>
            </jsonFormatter>
            <timestampFormat>yyyy-MM-dd' 'HH:mm.ss.SSS</timestampFormat>
        </layout>
    </appender>


    <root level="INFO">
    <!--<root level="debug">-->
        <appender-ref ref="json-stdout" />
        <!--<appender-ref ref="STDOUT" />-->
    </root>

</configuration>
